package main

import "fmt"

// go run 在命令台里运行第一个 .go 文件
func main() {
	fmt.Println("hello world")
}

/*
	Go 有的基础语言有几个部分：
		包声明、引入包、函数、变量、语句&表达式、注释

	上面程序各部分：
		package main 定义包名。 必须在源文件非注释第一行指明这个文件属于哪个包。
		package main 表示一个可独立执行的程序, 每个 Go 应用程序都包含一个名为 main 的包

		import "fmt" 告诉 Go 编译器这个程序需要使用 fmt 包（的函数, 或其它元素）,
		fmt 包实现了格式化 IO (输入/输出) 的函数

		func main() 是程序开始执行的函数。main 函数是每一个可执行程序所必须包含的,
		一般来说都是在启动第一个执行的函数 (如果有 init() 函数则会先执行该函数 )

		注释跟 JS 规则无异。

		fmt.Println(...) 可以将字符串输出到控制台, 并在最后自动增加换行符 \n 。
		使用 fmt.Print("hello, world\n") 可以得到相同结果。
		Print 和 Println 这两个函数也支持使用变量, 如： fmt.Println(arr)。
		如果没有特别指定, 它们会以默认的打印格式将变量 arr 输出到控制台 、

		当标识符（包括常量、变量、类型、函数名、结构字段等等）以一个大写字母开头,
		如：Group1, 那么使用这种形式的标识符的对象就可以被外部包的代码使用（客户端程序需要先导入这个包）,
		这被称为导出（像面向对象语言中的 public）; 标识符如果以小写字母开头, 则对保外不可见,
		但是它们在整个包的内部是可见并且可用的（像面向对象语言中的 protected）。

*/
